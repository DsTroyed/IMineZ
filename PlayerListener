package me.dancingwalrus.IMineZ;

import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.Server;
import org.bukkit.World;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.entity.PlayerDeathEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerRespawnEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.PlayerInventory;
import org.bukkit.material.MaterialData;
import org.bukkit.scheduler.BukkitScheduler;

public class PlayerListener
  implements Listener
{
  private IMineZ plugin;

  public PlayerListener(IMineZ instance)
  {
    this.plugin = instance;
  }
  @EventHandler(priority=EventPriority.NORMAL)
  public void onJoin(final PlayerJoinEvent event) {
    if ((this.plugin.getConfig().getBoolean("thirst.enabled")) && 
      (!event.getPlayer().hasPlayedBefore()))
      this.plugin.getServer().getScheduler().scheduleAsyncDelayedTask(this.plugin, new Runnable()
      {
        public void run() {
          event.getPlayer().setLevel(20);
        }
      }
      , 20L);
  }

  @EventHandler(priority=EventPriority.NORMAL)
  public void onRespawn(final PlayerRespawnEvent event)
  {
    if (this.plugin.getConfig().getBoolean("thirst.enabled"))
      this.plugin.getServer().getScheduler().scheduleAsyncDelayedTask(this.plugin, new Runnable()
      {
        public void run() {
          event.getPlayer().setLevel(20);
        }
      }
      , 20L);
  }

  @EventHandler(priority=EventPriority.NORMAL)
  public void onDeath(PlayerDeathEvent event) {
    if ((this.plugin.getConfig().getBoolean("thirst.enabled")) || (this.plugin.getConfig().getBoolean("visibility.enabled"))) {
      event.setDroppedExp(0);
    }
    int i = 1;
    while (i <= this.plugin.getConfig().getInt("zombie.spawns.onplayerdeath")) {
      event.getEntity().getLocation().getWorld().spawnCreature(event.getEntity().getLocation(), EntityType.ZOMBIE);
      i++;
    }
  }

  @EventHandler(priority=EventPriority.NORMAL)
  public void onInteract(PlayerInteractEvent event) { Player player = event.getPlayer();
    if ((this.plugin.getConfig().getBoolean("thirst.enabled")) && 
      ((event.getAction() == Action.RIGHT_CLICK_AIR) || (event.getAction() == Action.RIGHT_CLICK_BLOCK)) && 
      (player.getItemInHand().getType() == Material.POTION) && 
      (player.getItemInHand().getData().getData() == 0)) {
      if (this.plugin.getConfig().getInt("thirst.bottle") + player.getLevel() > 20)
        player.setLevel(20);
      else {
        player.setLevel(player.getLevel() + this.plugin.getConfig().getInt("thirst.bottle"));
      }
      int itemSlot = player.getInventory().getHeldItemSlot();
      player.getInventory().setItem(itemSlot, new ItemStack(374));
      event.setCancelled(true);
    }
  }
}
